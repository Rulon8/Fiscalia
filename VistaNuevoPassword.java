package ucr.casoUso;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;

public class VistaNuevoPassword extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Label labelMsjExito;
	@AutoGenerated
	private Label labelErrAuth;
	@AutoGenerated
	private Label labelErrCed;
	@AutoGenerated
	private Button botonVolver;
	@AutoGenerated
	private Button botonEnviar;
	@AutoGenerated
	private Label labelMensaje;
	@AutoGenerated
	private Label labelTitulo;
	@AutoGenerated
	private TextField campoCedula;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	private Controlador controlador;
	private ControladorNuevoPassword controladorPass;
	
	public VistaNuevoPassword() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		
		labelErrCed.setVisible(false);
		labelErrAuth.setVisible(false);
		labelMsjExito.setVisible(false);
		
		controlador = Controlador.obtenerInstancia();
		controladorPass = ControladorNuevoPassword.obtenerInstancia();
		
		botonEnviar.addClickListener(new ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				// TODO Auto-generated method stub
				String cedula;
				boolean exito;
				if (validarCampo()) {
					cedula = campoCedula.getValue();
					exito = controladorPass.enviarDatos(cedula);
					if (exito) {
						labelErrAuth.setVisible(false);
						labelMsjExito.setVisible(true);
					} else {
						labelMsjExito.setVisible(false);
						labelErrAuth.setVisible(true);
					}
				} else {
					labelErrCed.setVisible(true);
				}
			}
			
		});
		
		botonVolver.addClickListener(new ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				// TODO Auto-generated method stub
				controlador.cambiarVista("Login");
			}
			
		});
		
	}

	private boolean validarCampo() {
		
		boolean valido = true;
		
		if (campoCedula.getValue().length() < 9) {
			valido = false;
		}
		
		return valido;
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("200.0%");
		setHeight("100.0%");
		
		// campoCedula
		campoCedula = new TextField();
		campoCedula.setImmediate(false);
		campoCedula.setWidth("221px");
		campoCedula.setHeight("-1px");
		campoCedula.setInputPrompt("Cedula");
		mainLayout.addComponent(campoCedula, "top:205.0px;left:232.0px;");
		
		// labelTitulo
		labelTitulo = new Label();
		labelTitulo.setStyleName("titulo");
		labelTitulo.setImmediate(false);
		labelTitulo.setWidth("-1px");
		labelTitulo.setHeight("-1px");
		labelTitulo.setValue("Nueva Contraseña");
		mainLayout.addComponent(labelTitulo, "top:82.0px;left:90.0px;");
		
		// labelMensaje
		labelMensaje = new Label();
		labelMensaje.setImmediate(false);
		labelMensaje.setWidth("-1px");
		labelMensaje.setHeight("-1px");
		labelMensaje.setValue("Por favor ingrese su cédula. Se enviará su nueva contraseña al correo asociado a esta:");
		mainLayout.addComponent(labelMensaje, "top:170.0px;left:230.0px;");
		
		// botonEnviar
		botonEnviar = new Button();
		botonEnviar.setStyleName("boton-texto");
		botonEnviar.setCaption("Enviar");
		botonEnviar.setImmediate(true);
		botonEnviar.setWidth("-1px");
		botonEnviar.setHeight("-1px");
		mainLayout.addComponent(botonEnviar, "top:248.0px;left:371.0px;");
		
		// botonVolver
		botonVolver = new Button();
		botonVolver.setStyleName("boton-texto");
		botonVolver.setCaption("Volver");
		botonVolver.setImmediate(true);
		botonVolver.setWidth("-1px");
		botonVolver.setHeight("-1px");
		mainLayout.addComponent(botonVolver, "top:248.0px;left:233.0px;");
		
		// labelErrCed
		labelErrCed = new Label();
		labelErrCed.setStyleName("error");
		labelErrCed.setImmediate(false);
		labelErrCed.setWidth("-1px");
		labelErrCed.setHeight("-1px");
		labelErrCed.setValue("Valor no válido");
		mainLayout.addComponent(labelErrCed, "top:209.0px;left:474.0px;");
		
		// labelErrAuth
		labelErrAuth = new Label();
		labelErrAuth.setStyleName("error");
		labelErrAuth.setImmediate(false);
		labelErrAuth.setWidth("-1px");
		labelErrAuth.setHeight("-1px");
		labelErrAuth.setValue("El usuario ingresado no existe en el sistema");
		mainLayout.addComponent(labelErrAuth, "top:301.0px;left:230.0px;");
		
		// labelMsjExito
		labelMsjExito = new Label();
		labelMsjExito.setStyleName("exito");
		labelMsjExito.setImmediate(false);
		labelMsjExito.setWidth("-1px");
		labelMsjExito.setHeight("-1px");
		labelMsjExito.setValue("Mensaje enviado. Si no lo recibe intente de nuevo");
		mainLayout.addComponent(labelMsjExito, "top:301.0px;left:231.0px;");
		
		return mainLayout;
	}

}
