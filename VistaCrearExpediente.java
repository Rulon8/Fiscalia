package ucr.casoUso;

import com.sebworks.vaadstrap.Col;
import com.sebworks.vaadstrap.ColMod;
import com.sebworks.vaadstrap.ColOffsetMod;
import com.sebworks.vaadstrap.Container;
import com.sebworks.vaadstrap.MarginMod;
import com.sebworks.vaadstrap.Row;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.event.FieldEvents.TextChangeEvent;
import com.vaadin.event.FieldEvents.TextChangeListener;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Accordion;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;

public class VistaCrearExpediente extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */


	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Label labelInsert;
	@AutoGenerated
	private Label labelTitulo;
	@AutoGenerated
	private Accordion Acordeon;
	@AutoGenerated
	private AbsoluteLayout LayoutFechas;
	@AutoGenerated
	private TextField campoDuracCambioUltUbic;
	@AutoGenerated
	private TextField campoFechaIng;
	@AutoGenerated
	private Label labelFechaIng;
	@AutoGenerated
	private TextField campoFechaPresentacion;
	@AutoGenerated
	private Label labelFechaPresentacion;
	@AutoGenerated
	private TextField campoFechaUltUbicacion;
	@AutoGenerated
	private Label labelFechaUltUbicacion;
	@AutoGenerated
	private AbsoluteLayout LayoutUbicacion;
	@AutoGenerated
	private TextField campoCantLegajos;
	@AutoGenerated
	private Label labelCantLegajos;
	@AutoGenerated
	private TextField campoUbicLegajos;
	@AutoGenerated
	private Label labelUbicLegajos;
	@AutoGenerated
	private TextField campoMuebleUbicacion;
	@AutoGenerated
	private Label labelMuebleUbicacion;
	@AutoGenerated
	private TextField campoUbicacion;
	@AutoGenerated
	private Label labelUbicacion;
	@AutoGenerated
	private AbsoluteLayout LayoutInfoDenuncia;
	@AutoGenerated
	private TextField campoHoraAudiencia;
	@AutoGenerated
	private Label labelHoraAudiencia;
	@AutoGenerated
	private TextField campoFechaAudiencia;
	@AutoGenerated
	private Label labelFechaAudiencia;
	@AutoGenerated
	private TextField campoArtAplicables;
	@AutoGenerated
	private Label labelArtAplicables;
	@AutoGenerated
	private TextField campoCausa;
	@AutoGenerated
	private Label labelCausa;
	@AutoGenerated
	private TextField campoId;
	@AutoGenerated
	private Label labelId;
	@AutoGenerated
	private TextField campoParteDenunciada;
	@AutoGenerated
	private TextField campoParteDenunciante;
	@AutoGenerated
	private Label labelParteDenunciante;
	@AutoGenerated
	private TextField campoCarnet;
	@AutoGenerated
	private Label labelCarnet;
	@AutoGenerated
	private Label labelParteDenunciada;
	@AutoGenerated
	private TextField campoFechaDenuncia;
	@AutoGenerated
	private Label labelFechaDenuncia;
	@AutoGenerated
	private AbsoluteLayout LayoutInfoGeneral;
	@AutoGenerated
	private Label labelAlertInstructor;
	@AutoGenerated
	private Label labelAlertNumExp;
	@AutoGenerated
	private ComboBox comboBoxClasificacion;
	@AutoGenerated
	private ComboBox comboBoxEstado;
	@AutoGenerated
	private Label labelInstructor;
	@AutoGenerated
	private Label labelNumExp;
	@AutoGenerated
	private TextField campoInstructor;
	@AutoGenerated
	private TextField campoNumExp;
	@AutoGenerated
	private TextField campoResponsable;
	@AutoGenerated
	private Label labelResponsable;
	@AutoGenerated
	private Label labelEstado;
	@AutoGenerated
	private Label labelClas;
	@AutoGenerated
	private Button botonIngresar;
	@AutoGenerated
	private Label valorInst;
	@AutoGenerated
	private Label labelInst;
	@AutoGenerated
	private Button botonVolver;
	private ControladorCrearExpediente controlador;
	private Controlador control;
	
	private String insert = "INSERT INTO expediente ";
	private String consulta = "";
	
	private String valorNumExp;
	private String valorInstructor;
	private String valorResponsable;
	private String valorEstado;
	private String valorClasificacion;
	private String valorCodigo;
	
	private String valorFechaDenuncia;
	private String valorParteDenunciada;
	private String valorCarneDenunciada;
	private String valorParteDenunciante;
	private String valorIdentDenunciante;
	private String valorCausaDenun;
	private String valorArtAplicables;
	private String valorFechaAudiencia;
	private String valorHoraAudiencia;
	
	private String valorUbicacion;
	private String valorMuebleUbi;
	private String valorUbiLegajos;
	private String valorCantidadLegajos;
	
	private String valorFechaPresentacion;
	private String valorFechaIngrDenun;
	private String valorFechaUltimaUbi;
	
	private String valorPlazo;
	
	
	
	
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public VistaCrearExpediente() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		controlador = ControladorCrearExpediente.obtenerInstancia();
		control = Controlador.obtenerInstancia();
		labelAlertNumExp.setVisible(false);
		labelAlertInstructor.setVisible(false);
		labelInsert.setVisible(false);
		llenarComboBoxEstado();
		llenarComboBoxClasif();
		
		//Campos de "Informacion General"
		
		campoNumExp.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorNumExp = event.getText();
            	if (!valorNumExp.isEmpty()){
            		if (controlador.comprobarNumExp(valorNumExp)){
            			labelAlertNumExp.setVisible(false);
            			botonIngresar.setEnabled(true);
            		}
            		else{
            			labelAlertNumExp.setVisible(true);
            			botonIngresar.setEnabled(false);
            		}
            	}
            }
		});
		
		campoInstructor.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorInstructor = event.getText();
            	if (!valorInstructor.isEmpty()){
            		if (controlador.comprobarInstructor(valorInstructor)){
            			labelAlertInstructor.setVisible(true);
            			botonIngresar.setEnabled(false);
            		}
            		else{
            			labelAlertInstructor.setVisible(false);
            			botonIngresar.setEnabled(true);
            		}
            	}
            	else{
            		labelAlertInstructor.setVisible(false);
            	}
            }
		});
		
		campoResponsable.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorResponsable  = event.getText();
            }
		});
		
		comboBoxClasificacion.addValueChangeListener(new ValueChangeListener (){
			@Override
			public void valueChange(ValueChangeEvent event){
				if (comboBoxClasificacion.getValue() != null){
					switch(comboBoxClasificacion.getValue().toString()) {
					case "0":
						valorClasificacion = "0";
						valorPlazo = "15";
						break;
					case "1":
						valorClasificacion = "1";
						valorPlazo = "10";
						break;
					case "2":
						valorClasificacion = "2";
						valorPlazo = "22";
						break;
					case "3":
						valorClasificacion = "3";
						valorPlazo = "22";
						break;
					case "4":
						valorClasificacion = "4";
						valorPlazo = "10";
						break;
					case "5":
						valorClasificacion = "5";
						valorPlazo = "66";
						break;
					case "6":
						valorClasificacion = "6";
						valorPlazo = "22";
						break;
					case "7":
						valorClasificacion = "7";
						valorPlazo = "5";
						break;
					case "8":
						valorClasificacion = "8";
						valorPlazo = "15";
						break;
					case "9":
						valorClasificacion = "9";
						valorPlazo = "15";
						break;
					case "10":
						valorClasificacion = "10";
						valorPlazo = "15";
						break;
					case "11":
						valorClasificacion = "11";
						valorPlazo = "132";
						break;
					case "12":
						valorClasificacion = "12";
						valorPlazo = "15";
						break;
					case "13":
						valorClasificacion = "13";
						valorPlazo = "22";
						break;
					case "14":
						valorClasificacion = "14";
						valorPlazo = "117";
						break;
					case "15":
						valorClasificacion = "15";
						valorPlazo = "15";
						break;
					case "16":
						valorClasificacion = "16";
						valorPlazo = "15";
						break;
					case "17":
						valorClasificacion = "17";
						valorPlazo = "44";
						break;
					case "18":
						valorClasificacion = "18";
						valorPlazo = "22";
						break;
					case "19":
						valorClasificacion = "19";
						valorPlazo = "15";
						break;
					case "20":
						valorClasificacion = "20";
						valorPlazo = "22";
						break;
					case "21":
						valorClasificacion = "21";
						valorPlazo = "10";
						break;
					case "22":
						valorClasificacion = "22";
						valorPlazo = "10";
						break;
					case "23":
						valorClasificacion = "23";
						valorPlazo = "15";
						break;
					case "24":
						valorClasificacion = "24";
						valorPlazo = "22";
						break;
					case "25":
						valorClasificacion = "25";
						valorPlazo = "132";
						break;
					case "26":
						valorClasificacion = "26";
						valorPlazo = "132";
						break;
					case "27":
						valorClasificacion = "27";
						valorPlazo = "10";
						break;
					case "28":
						valorClasificacion = "28";
						valorPlazo = "44";
						break;
					case "29":
						valorClasificacion = "29";
						valorPlazo = "10";
						break;
					case "30":
						valorClasificacion = "30";
						valorPlazo = "15";
						break;
					case "31":
						valorClasificacion = "31";
						valorPlazo = "22";
						break;
					case "32":
						valorClasificacion = "32";
						valorPlazo = "44";
						break;
						
					}
				}
			}
		});
		
		comboBoxEstado.addValueChangeListener(new ValueChangeListener (){
			@Override
			public void valueChange(ValueChangeEvent event){
				if (comboBoxEstado.getValue() != null){
					valorEstado = comboBoxEstado.getValue().toString();
				}
			}
		});
		
		//Campos de "Informacion de Denuncia"
		
		campoFechaDenuncia.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorFechaDenuncia = event.getText();
            }
		});
		
		campoParteDenunciada.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorParteDenunciada = event.getText();
            }
		});
		
		campoCarnet.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorCarneDenunciada = event.getText();
            }
		});
		
		campoParteDenunciante.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorParteDenunciante = event.getText();
            }
		});
		
		campoId.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorIdentDenunciante = event.getText();
            }
		});
		
		campoCausa.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorCausaDenun = event.getText();
            }
		});
		
		campoArtAplicables.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorArtAplicables = event.getText();
            }
		});
		
		campoFechaAudiencia.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorFechaAudiencia = event.getText();
            }
		});
		
		campoHoraAudiencia.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorHoraAudiencia = event.getText();
            }
		});
		
		//Campos de Ubicacion
		
		campoUbicacion.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorUbicacion = event.getText();
            }
		});
		
		campoMuebleUbicacion.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorMuebleUbi = event.getText();
            }
		});
		
		campoUbicLegajos.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorUbiLegajos = event.getText();
            }
		});
		
		campoCantLegajos.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorCantidadLegajos = event.getText();
            }
		});

		//Campos de Fechas
		
		campoFechaPresentacion.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorFechaPresentacion = event.getText();
            }
		});
		
		campoFechaIng.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorFechaIngrDenun = event.getText();
            }
		});
		
		campoFechaUltUbicacion.addTextChangeListener(new TextChangeListener() {
            @Override
            public void textChange(TextChangeEvent event) {
            	valorFechaUltimaUbi = event.getText();
            }
		});
		
		//Botones
		
		botonIngresar.addClickListener(new ClickListener(){
			@Override
			public void buttonClick(ClickEvent evento){
				
				valorCodigo = Integer.toString(controlador.consultarCodigo());
			
				consulta = insert + "VALUES("				+
						"0, " 								+ // Numero de cambios, en 0 por defecto.
						"false, "							+ //archivado, false por defecto
						"'"+valorCodigo+"', "				+ //codigo, valor por defecto?
						"'"+valorNumExp+"', "				+ //numero del expediente
						"'"+valorInstructor+"', "			+ //id Instrcutor
						"'"+valorEstado+"', "				+ //estado
						"'"+valorClasificacion+"', "		+ //clasificacion, da el valor al plazo
						"'"+valorResponsable+"', "			+ //responsable
						"'"+valorFechaDenuncia+"', "		+ //fecha de denuncia
						"'"+valorParteDenunciada+"', "		+ //parte denunciada
						"'"+valorCarneDenunciada+"', "		+ //carne de denunciada
						"'"+valorParteDenunciante+"', "		+ //parte denuncianete
						"'"+valorIdentDenunciante+"', "		+ //id del denunciante
						"'"+valorCausaDenun+"', "			+ //causa de la denuncia
						"'"+valorArtAplicables+"', "		+ //articulos aplicables
						"'"+valorFechaAudiencia+"', "		+ //fecha de audiencia
						"'"+valorHoraAudiencia+"', "		+ //hora de audiencia
						""+Integer.parseInt(valorPlazo)+", "+ //plazo meta
						""+"0"+", "							+ //tiempo trancurrido
						"'"+"condPlazo"+"', "				+ 
						"'"+valorUbicacion+"', "			+ 
						"'"+valorMuebleUbi+"', "			+ 
						"'"+valorUbiLegajos+"', "			+ 
						"'"+valorCantidadLegajos+"', "		+ 
						"'"+valorFechaPresentacion+"', "	+ 
						"'"+valorFechaIngrDenun+"', "		+ 
						""+"0"+", "							+ 
						"'"+"fechaCambiEstado"+"', "		+ 
						""+"0"+", "							+ 
						""+"0"+", "			+ 
						"'"+valorFechaUltimaUbi+"', "		+ 
						""+"0"+", "							+ 
						""+"0"+", "							+ 
						""+"0"+","							+
						"'"+"A tiempo"+"'"					+
						");";
				controlador.ingresarExpediente(consulta);
				labelInsert.setVisible(true);
			}
		});
		
		botonVolver.addClickListener(new ClickListener() {
			@Override
			public void buttonClick (ClickEvent evento){
				control.cambiarVista("Menu Principal");
			}
		});
		
	}
	
	 private void llenarComboBoxEstado(){
		 comboBoxEstado.addItem("Admisibilidad");
		 comboBoxEstado.addItem("Saneamiento");
		 comboBoxEstado.addItem("Comparecencia");
		 comboBoxEstado.addItem("Acto final");
		 comboBoxEstado.addItem("Suspendido");
		 comboBoxEstado.addItem("Terminado");
		 comboBoxEstado.addItem("Términos");
	 }
	 
	 private void llenarComboBoxClasif(){
		 comboBoxClasificacion.addItem("0");
		 comboBoxClasificacion.addItem("1");
		 comboBoxClasificacion.addItem("2");
		 comboBoxClasificacion.addItem("3");
		 comboBoxClasificacion.addItem("4");
		 comboBoxClasificacion.addItem("5");
		 comboBoxClasificacion.addItem("6");
		 comboBoxClasificacion.addItem("7");
		 comboBoxClasificacion.addItem("8");
		 comboBoxClasificacion.addItem("9");
		 comboBoxClasificacion.addItem("10");
		 comboBoxClasificacion.addItem("11");
		 comboBoxClasificacion.addItem("12");
		 comboBoxClasificacion.addItem("13");
		 comboBoxClasificacion.addItem("14");
		 comboBoxClasificacion.addItem("15");
		 comboBoxClasificacion.addItem("16");
		 comboBoxClasificacion.addItem("17");
		 comboBoxClasificacion.addItem("18");
		 comboBoxClasificacion.addItem("19");
		 comboBoxClasificacion.addItem("20");
		 comboBoxClasificacion.addItem("21");
		 comboBoxClasificacion.addItem("22");
		 comboBoxClasificacion.addItem("23");
		 comboBoxClasificacion.addItem("24");
		 comboBoxClasificacion.addItem("25");
		 comboBoxClasificacion.addItem("26");
		 comboBoxClasificacion.addItem("27");
		 comboBoxClasificacion.addItem("28");
		 comboBoxClasificacion.addItem("29");
		 comboBoxClasificacion.addItem("30");
		 comboBoxClasificacion.addItem("31");
		 comboBoxClasificacion.addItem("32");
	 }
	 
	 public void setVista() {
			
		this.setSizeFull();
		mainLayout.removeAllComponents();
		
		
		Container container = new Container();
		
		Row row = container.addRow();
		Col col1 = row.addCol(ColMod.XS_12);
		col1.addComponent(labelTitulo);
		
		Row row2 = container.addRow();
		Col col2 = row2.addCol(ColMod.XS_12, MarginMod.TOP30);
		col2.addComponent(Acordeon);
		
		//Crear Info General
		LayoutInfoGeneral.removeAllComponents();
		
		Row row3 = new Row();
		Col col6 = row3.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col7 = new Col();
		col7.addStyles(ColMod.XS_12);
		col7.addComponent(labelNumExp);
		col6.addComponent(col7);
		
		Col col8 = new Col();
		col8.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col8.addComponent(campoNumExp);
		col6.addComponent(col8);
		
		Col col3 = new Col();
		col3.addStyles(ColMod.XS_12);
		col3.addComponent(labelAlertNumExp);
		col8.addComponent(col3);
		
		Col col12 = row3.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col13 = new Col();
		col13.addStyles(ColMod.XS_12);
		col13.addComponent(labelInstructor);
		col12.addComponent(col13);
		
		Col col14 = new Col();
		col14.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col14.addComponent(campoInstructor);
		col12.addComponent(col14);
		
		Col col4 = new Col();
		col4.addStyles(ColMod.XS_12);
		col4.addComponent(labelAlertInstructor);
		col12.addComponent(col4);
		
		Col col18 = row3.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col19 = new Col();
		col19.addStyles(ColMod.XS_12);
		col19.addComponent(labelResponsable);
		col18.addComponent(col19);
		
		Col col20 = new Col();
		col20.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col20.addComponent(campoResponsable);
		col18.addComponent(col20);
		
		LayoutInfoGeneral.addComponent(row3);
		
		Row row15 = new Row();
		Col col9 = row15.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col10 = new Col();
		col10.addStyles(ColMod.XS_12);
		col10.addComponent(labelEstado);
		col9.addComponent(col10);
		
		Col col5 = new Col();
		col5.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col5.addComponent(comboBoxEstado);
		col9.addComponent(col5);
		
		Col col15 = row15.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col16 = new Col();
		col16.addStyles(ColMod.XS_12);
		col16.addComponent(labelClas);
		col15.addComponent(col16);
		
		Col col17 = new Col();
		col17.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col17.addComponent(comboBoxClasificacion);
		col15.addComponent(col17);
		
		LayoutInfoGeneral.addComponent(row15);
		
		//Crear Info Denuncia
		LayoutInfoDenuncia.removeAllComponents();
		
		Row row4 = new Row();
		Col col24 = row4.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col25 = new Col();
		col25.addStyles(ColMod.XS_12);
		col25.addComponent(labelFechaDenuncia);
		col24.addComponent(col25);
		
		Col col26 = new Col();
		col26.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col26.addComponent(campoFechaDenuncia);
		col24.addComponent(col26);
		
		Col col30 = row4.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col31 = new Col();
		col31.addStyles(ColMod.XS_12);
		col31.addComponent(labelParteDenunciada);
		col30.addComponent(col31);
		
		Col col34= new Col();
		col34.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col34.addComponent(campoParteDenunciada);
		col30.addComponent(col34);
		
		Col col36 = row4.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col37 = new Col();
		col37.addStyles(ColMod.XS_12);
		col37.addComponent(labelCarnet);
		col36.addComponent(col37);
		
		Col col40 = new Col();
		col40.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col40.addComponent(campoCarnet);
		col36.addComponent(col40);
		
		LayoutInfoDenuncia.addComponent(row4);
		
		Row row5 = new Row();
		Col col42 = row5.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col43 = new Col();
		col43.addStyles(ColMod.XS_12);
		col43.addComponent(labelParteDenunciante);
		col42.addComponent(col43);
		
		Col col46 = new Col();
		col46.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col46.addComponent(campoParteDenunciante);
		col42.addComponent(col46);
		
		Col col48 = row5.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col49 = new Col();
		col49.addStyles(ColMod.XS_12);
		col49.addComponent(labelId);
		col48.addComponent(col49);
		
		Col col52= new Col();
		col52.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col52.addComponent(campoId);
		col48.addComponent(col52);
		
		Col col54 = row5.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col55 = new Col();
		col55.addStyles(ColMod.XS_12);
		col55.addComponent(labelCausa);
		col54.addComponent(col55);
		
		Col col58 = new Col();
		col58.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col58.addComponent(campoCausa);
		col54.addComponent(col58);
		
		LayoutInfoDenuncia.addComponent(row5);
		
		Row row6 = new Row();
		Col col60 = row6.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col61 = new Col();
		col61.addStyles(ColMod.XS_12);
		col61.addComponent(labelArtAplicables);
		col60.addComponent(col61);
		
		Col col64 = new Col();
		col64.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col64.addComponent(campoArtAplicables);
		col60.addComponent(col64);
				
		Col col66 = row6.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col67 = new Col();
		col67.addStyles(ColMod.XS_12);
		col67.addComponent(labelFechaAudiencia);
		col66.addComponent(col67);
		
		Col col70= new Col();
		col70.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col70.addComponent(campoFechaAudiencia);
		col66.addComponent(col70);
		
		Col col72 = row6.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col73 = new Col();
		col73.addStyles(ColMod.XS_12);
		col73.addComponent(labelHoraAudiencia);
		col72.addComponent(col73);
		
		Col col76 = new Col();
		col76.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col76.addComponent(campoHoraAudiencia);
		col72.addComponent(col76);
		
		LayoutInfoDenuncia.addComponent(row6);
		
		//Crear Layout Ubicación
		LayoutUbicacion.removeAllComponents();
		
		Row row8 = new Row();
		Col col96 = row8.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col97 = new Col();
		col97.addStyles(ColMod.XS_12);
		col97.addComponent(labelUbicacion);
		col96.addComponent(col97);
		
		Col col100= new Col();
		col100.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col100.addComponent(campoUbicacion);
		col96.addComponent(col100);
		
		Col col102 = row8.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col103 = new Col();
		col103.addStyles(ColMod.XS_12);
		col103.addComponent(labelMuebleUbicacion);
		col102.addComponent(col103);
		
		Col col106 = new Col();
		col106.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col106.addComponent(campoMuebleUbicacion);
		col102.addComponent(col106);
		
		Col col108 = row8.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col109 = new Col();
		col109.addStyles(ColMod.XS_12);
		col109.addComponent(labelUbicLegajos);
		col108.addComponent(col109);
		
		Col col112 = new Col();
		col112.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col112.addComponent(campoUbicLegajos);
		col108.addComponent(col112);
		
		LayoutUbicacion.addComponent(row8);
		
		Row row9 = new Row();
		Col col114 = row9.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col115 = new Col();
		col115.addStyles(ColMod.XS_12);
		col115.addComponent(labelCantLegajos);
		col114.addComponent(col115);
		
		Col col118= new Col();
		col118.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col118.addComponent(campoCantLegajos);
		col114.addComponent(col118);
		
		LayoutUbicacion.addComponent(row9);
		
		//Crear Layout Fechas
		LayoutFechas.removeAllComponents();
		
		Row row10 = new Row();
		Col col120 = row10.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col121 = new Col();
		col121.addStyles(ColMod.XS_12);
		col121.addComponent(labelFechaPresentacion);
		col120.addComponent(col121);
		
		Col col124= new Col();
		col124.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col124.addComponent(campoFechaPresentacion);
		col120.addComponent(col124);
		
		Col col126 = row10.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col127 = new Col();
		col127.addStyles(ColMod.XS_12);
		col127.addComponent(labelFechaIng);
		col126.addComponent(col127);
		
		Col col130 = new Col();
		col130.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col130.addComponent(campoFechaIng);
		col126.addComponent(col130);
		
		Col col156 = row10.addCol(ColMod.XS_12, ColMod.SM_6, ColMod.MD_4, MarginMod.TOP20);
		
		Col col157 = new Col();
		col157.addStyles(ColMod.XS_12);
		col157.addComponent(labelFechaUltUbicacion);
		col156.addComponent(col157);
		
		Col col160= new Col();
		col160.addStyles(ColMod.XS_12, MarginMod.TOP5);
		col160.addComponent(campoFechaUltUbicacion);
		col156.addComponent(col160);
		
		LayoutFechas.addComponent(row10);
		
		Row row11 = container.addRow();
		Col col22 = row11.addCol(ColMod.XS_12, ColMod.MD_4, ColOffsetMod.MD_OFFSET_3, MarginMod.TOP30);
		col22.addComponent(labelInsert);
		Col col23 = row11.addCol(ColMod.XS_12, ColMod.MD_3, MarginMod.TOP20);
		col23.addComponent(botonIngresar);
		Col col27 = row11.addCol(ColMod.XS_12, ColMod.MD_2, MarginMod.TOP20);
		col27.addComponent(botonVolver);
		
		mainLayout.addComponent(container);
		
		MyUI.getCurrent().setContent(this);
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setStyleName("layout-expediente");
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// botonVolver
		botonVolver = new Button();
		botonVolver.setCaption("Volver");
		botonVolver.setImmediate(true);
		botonVolver.setWidth("-1px");
		botonVolver.setHeight("-1px");
		mainLayout.addComponent(botonVolver, "top:60.0px;left:1000.0px;");
		
		// labelInst
		labelInst = new Label();
		labelInst.setStyleName("error");
		labelInst.setImmediate(false);
		labelInst.setWidth("-1px");
		labelInst.setHeight("-1px");
		labelInst.setValue("Persona a cargo:");
		mainLayout.addComponent(labelInst, "top:150.0px;left:60.0px;");
		
		// valorInst
		valorInst = new Label();
		valorInst.setImmediate(false);
		valorInst.setWidth("-1px");
		valorInst.setHeight("-1px");
		valorInst.setValue("Label");
		mainLayout.addComponent(valorInst, "top:150.0px;left:231.0px;");
		
		// botonIngresar
		botonIngresar = new Button();
		botonIngresar.setCaption("Ingresar el expediente");
		botonIngresar.setImmediate(true);
		botonIngresar.setWidth("-1px");
		botonIngresar.setHeight("-1px");
		mainLayout.addComponent(botonIngresar, "top:142.0px;left:950.0px;");
		
		// Acordeon
		Acordeon = buildAcordeon();
		mainLayout.addComponent(Acordeon, "top:240.0px;left:60.0px;");
		
		// labelTitulo
		labelTitulo = new Label();
		labelTitulo.setStyleName("titulo");
		labelTitulo.setImmediate(false);
		labelTitulo.setWidth("-1px");
		labelTitulo.setHeight("-1px");
		labelTitulo.setValue("Crear Expediente");
		mainLayout.addComponent(labelTitulo, "top:100.0px;left:61.0px;");
		
		// labelInsert
		labelInsert = new Label();
		labelInsert.setImmediate(false);
		labelInsert.setWidth("-1px");
		labelInsert.setHeight("-1px");
		labelInsert.setValue("Se creó el expediente");
		mainLayout.addComponent(labelInsert, "top:150.0px;left:680.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private Accordion buildAcordeon() {
		// common part: create layout
		Acordeon = new Accordion();
		Acordeon.setImmediate(true);
		Acordeon.setWidth("90.0%");
		Acordeon.setHeight("90.0%");
		
		// LayoutInfoGeneral
		LayoutInfoGeneral = buildLayoutInfoGeneral();
		Acordeon.addTab(LayoutInfoGeneral, "Información General", null);
		
		// LayoutInfoDenuncia
		LayoutInfoDenuncia = buildLayoutInfoDenuncia();
		Acordeon.addTab(LayoutInfoDenuncia, "Información de la Denuncia", null);
		
		// LayoutUbicacion
		LayoutUbicacion = buildLayoutUbicacion();
		Acordeon.addTab(LayoutUbicacion, "Ubicación", null);
		
		// LayoutFechas
		LayoutFechas = buildLayoutFechas();
		Acordeon.addTab(LayoutFechas, "Fechas", null);
		
		return Acordeon;
	}

	@AutoGenerated
	private AbsoluteLayout buildLayoutInfoGeneral() {
		// common part: create layout
		LayoutInfoGeneral = new AbsoluteLayout();
		LayoutInfoGeneral.setStyleName("layout-acordeon");
		LayoutInfoGeneral.setImmediate(false);
		LayoutInfoGeneral.setWidth("100.0%");
		LayoutInfoGeneral.setHeight("100.0%");
		
		// labelClas
		labelClas = new Label();
		labelClas.setImmediate(false);
		labelClas.setWidth("-1px");
		labelClas.setHeight("-1px");
		labelClas.setValue("Clasificación:");
		LayoutInfoGeneral.addComponent(labelClas, "top:200.0px;left:350.0px;");
		
		// labelEstado
		labelEstado = new Label();
		labelEstado.setImmediate(false);
		labelEstado.setWidth("-1px");
		labelEstado.setHeight("-1px");
		labelEstado.setValue("Estado: ");
		LayoutInfoGeneral.addComponent(labelEstado, "top:200.0px;left:0.0px;");
		
		// labelResponsable
		labelResponsable = new Label();
		labelResponsable.setImmediate(false);
		labelResponsable.setWidth("-1px");
		labelResponsable.setHeight("-1px");
		labelResponsable.setValue("Responsable:");
		LayoutInfoGeneral.addComponent(labelResponsable, "top:0.0px;left:700.0px;");
		
		// campoResponsable
		campoResponsable = new TextField();
		campoResponsable.setImmediate(false);
		campoResponsable.setWidth("-1px");
		campoResponsable.setHeight("-1px");
		LayoutInfoGeneral.addComponent(campoResponsable, "top:40.0px;left:700.0px;");
		
		// campoNumExp
		campoNumExp = new TextField();
		campoNumExp.setImmediate(false);
		campoNumExp.setWidth("-1px");
		campoNumExp.setHeight("-1px");
		LayoutInfoGeneral.addComponent(campoNumExp, "top:40.0px;left:0.0px;");
		
		// campoInstructor
		campoInstructor = new TextField();
		campoInstructor.setImmediate(false);
		campoInstructor.setWidth("-1px");
		campoInstructor.setHeight("-1px");
		LayoutInfoGeneral.addComponent(campoInstructor, "top:40.0px;left:350.0px;");
		
		// labelNumExp
		labelNumExp = new Label();
		labelNumExp.setImmediate(false);
		labelNumExp.setWidth("-1px");
		labelNumExp.setHeight("-1px");
		labelNumExp.setValue("Número de expediente:");
		LayoutInfoGeneral.addComponent(labelNumExp, "top:0.0px;left:0.0px;");
		
		// labelInstructor
		labelInstructor = new Label();
		labelInstructor.setImmediate(false);
		labelInstructor.setWidth("-1px");
		labelInstructor.setHeight("-1px");
		labelInstructor.setValue("Instructor:");
		LayoutInfoGeneral.addComponent(labelInstructor, "top:0.0px;left:350.0px;");
		
		// comboBoxEstado
		comboBoxEstado = new ComboBox();
		comboBoxEstado.setImmediate(false);
		comboBoxEstado.setWidth("-1px");
		comboBoxEstado.setHeight("-1px");
		LayoutInfoGeneral.addComponent(comboBoxEstado, "top:240.0px;left:-1.0px;");
		
		// comboBoxClasificacion
		comboBoxClasificacion = new ComboBox();
		comboBoxClasificacion.setImmediate(false);
		comboBoxClasificacion.setWidth("-1px");
		comboBoxClasificacion.setHeight("-1px");
		LayoutInfoGeneral.addComponent(comboBoxClasificacion, "top:240.0px;left:350.0px;");
		
		// labelAlertNumExp
		labelAlertNumExp = new Label();
		labelAlertNumExp.setImmediate(false);
		labelAlertNumExp.setWidth("-1px");
		labelAlertNumExp.setHeight("-1px");
		labelAlertNumExp.setValue("Ya existe un expediente asociado a ese número");
		LayoutInfoGeneral.addComponent(labelAlertNumExp, "top:80.0px;left:0.0px;");
		
		// labelAlertInstructor
		labelAlertInstructor = new Label();
		labelAlertInstructor.setImmediate(false);
		labelAlertInstructor.setWidth("-1px");
		labelAlertInstructor.setHeight("-1px");
		labelAlertInstructor.setValue("No se encuentra el instructor dentro del sistema");
		LayoutInfoGeneral.addComponent(labelAlertInstructor, "top:80.0px;left:350.0px;");
		
		return LayoutInfoGeneral;
	}

	@AutoGenerated
	private AbsoluteLayout buildLayoutInfoDenuncia() {
		// common part: create layout
		LayoutInfoDenuncia = new AbsoluteLayout();
		LayoutInfoDenuncia.setStyleName("vertical-scroll layout-acordeon");
		LayoutInfoDenuncia.setImmediate(false);
		LayoutInfoDenuncia.setWidth("100.0%");
		LayoutInfoDenuncia.setHeight("100.0%");
		
		// labelFechaDenuncia
		labelFechaDenuncia = new Label();
		labelFechaDenuncia.setImmediate(false);
		labelFechaDenuncia.setWidth("-1px");
		labelFechaDenuncia.setHeight("-1px");
		labelFechaDenuncia.setValue("Fecha Denuncia:");
		LayoutInfoDenuncia.addComponent(labelFechaDenuncia, "top:0.0px;left:0.0px;");
		
		// campoFechaDenuncia
		campoFechaDenuncia = new TextField();
		campoFechaDenuncia.setImmediate(false);
		campoFechaDenuncia.setWidth("-1px");
		campoFechaDenuncia.setHeight("-1px");
		LayoutInfoDenuncia.addComponent(campoFechaDenuncia, "top:40.0px;left:0.0px;");
		
		// labelParteDenunciada
		labelParteDenunciada = new Label();
		labelParteDenunciada.setImmediate(false);
		labelParteDenunciada.setWidth("-1px");
		labelParteDenunciada.setHeight("-1px");
		labelParteDenunciada.setValue("Parte Denunciada:");
		LayoutInfoDenuncia.addComponent(labelParteDenunciada, "top:0.0px;left:350.0px;");
		
		// labelCarnet
		labelCarnet = new Label();
		labelCarnet.setImmediate(false);
		labelCarnet.setWidth("-1px");
		labelCarnet.setHeight("-1px");
		labelCarnet.setValue("Carnet:");
		LayoutInfoDenuncia.addComponent(labelCarnet, "top:0.0px;left:700.0px;");
		
		// campoCarnet
		campoCarnet = new TextField();
		campoCarnet.setImmediate(false);
		campoCarnet.setWidth("-1px");
		campoCarnet.setHeight("-1px");
		LayoutInfoDenuncia.addComponent(campoCarnet, "top:40.0px;left:700.0px;");
		
		// labelParteDenunciante
		labelParteDenunciante = new Label();
		labelParteDenunciante.setImmediate(false);
		labelParteDenunciante.setWidth("-1px");
		labelParteDenunciante.setHeight("-1px");
		labelParteDenunciante.setValue("Parte Denunciante:");
		LayoutInfoDenuncia.addComponent(labelParteDenunciante, "top:200.0px;left:0.0px;");
		
		// campoParteDenunciante
		campoParteDenunciante = new TextField();
		campoParteDenunciante.setImmediate(false);
		campoParteDenunciante.setWidth("-1px");
		campoParteDenunciante.setHeight("-1px");
		LayoutInfoDenuncia.addComponent(campoParteDenunciante, "top:240.0px;left:0.0px;");
		
		// campoParteDenunciada
		campoParteDenunciada = new TextField();
		campoParteDenunciada.setImmediate(false);
		campoParteDenunciada.setWidth("-1px");
		campoParteDenunciada.setHeight("-1px");
		LayoutInfoDenuncia.addComponent(campoParteDenunciada, "top:40.0px;left:350.0px;");
		
		// labelId
		labelId = new Label();
		labelId.setImmediate(false);
		labelId.setWidth("-1px");
		labelId.setHeight("-1px");
		labelId.setValue("Identificación:");
		LayoutInfoDenuncia.addComponent(labelId, "top:200.0px;left:350.0px;");
		
		// campoId
		campoId = new TextField();
		campoId.setImmediate(false);
		campoId.setWidth("-1px");
		campoId.setHeight("-1px");
		LayoutInfoDenuncia.addComponent(campoId, "top:240.0px;left:350.0px;");
		
		// labelCausa
		labelCausa = new Label();
		labelCausa.setImmediate(false);
		labelCausa.setWidth("-1px");
		labelCausa.setHeight("-1px");
		labelCausa.setValue("Causa:");
		LayoutInfoDenuncia.addComponent(labelCausa, "top:200.0px;left:700.0px;");
		
		// campoCausa
		campoCausa = new TextField();
		campoCausa.setImmediate(false);
		campoCausa.setWidth("-1px");
		campoCausa.setHeight("-1px");
		LayoutInfoDenuncia.addComponent(campoCausa, "top:240.0px;left:700.0px;");
		
		// labelArtAplicables
		labelArtAplicables = new Label();
		labelArtAplicables.setImmediate(false);
		labelArtAplicables.setWidth("-1px");
		labelArtAplicables.setHeight("-1px");
		labelArtAplicables.setValue("Artículos Aplicables:");
		LayoutInfoDenuncia.addComponent(labelArtAplicables, "top:400.0px;left:0.0px;");
		
		// campoArtAplicables
		campoArtAplicables = new TextField();
		campoArtAplicables.setImmediate(false);
		campoArtAplicables.setWidth("-1px");
		campoArtAplicables.setHeight("-1px");
		LayoutInfoDenuncia.addComponent(campoArtAplicables, "top:440.0px;left:0.0px;");
		
		// labelFechaAudiencia
		labelFechaAudiencia = new Label();
		labelFechaAudiencia.setImmediate(false);
		labelFechaAudiencia.setWidth("-1px");
		labelFechaAudiencia.setHeight("-1px");
		labelFechaAudiencia.setValue("Fecha Audiencia:");
		LayoutInfoDenuncia.addComponent(labelFechaAudiencia, "top:400.0px;left:350.0px;");
		
		// campoFechaAudiencia
		campoFechaAudiencia = new TextField();
		campoFechaAudiencia.setImmediate(false);
		campoFechaAudiencia.setWidth("-1px");
		campoFechaAudiencia.setHeight("-1px");
		LayoutInfoDenuncia.addComponent(campoFechaAudiencia, "top:440.0px;left:350.0px;");
		
		// labelHoraAudiencia
		labelHoraAudiencia = new Label();
		labelHoraAudiencia.setImmediate(false);
		labelHoraAudiencia.setWidth("-1px");
		labelHoraAudiencia.setHeight("-1px");
		labelHoraAudiencia.setValue("Hora Audiencia:");
		LayoutInfoDenuncia.addComponent(labelHoraAudiencia, "top:400.0px;left:700.0px;");
		
		// campoHoraAudiencia
		campoHoraAudiencia = new TextField();
		campoHoraAudiencia.setImmediate(false);
		campoHoraAudiencia.setWidth("-1px");
		campoHoraAudiencia.setHeight("-1px");
		LayoutInfoDenuncia.addComponent(campoHoraAudiencia, "top:440.0px;left:700.0px;");
		
		return LayoutInfoDenuncia;
	}

	@AutoGenerated
	private AbsoluteLayout buildLayoutUbicacion() {
		// common part: create layout
		LayoutUbicacion = new AbsoluteLayout();
		LayoutUbicacion.setStyleName("layout-acordeon");
		LayoutUbicacion.setImmediate(false);
		LayoutUbicacion.setWidth("100.0%");
		LayoutUbicacion.setHeight("100.0%");
		
		// labelUbicacion
		labelUbicacion = new Label();
		labelUbicacion.setImmediate(false);
		labelUbicacion.setWidth("-1px");
		labelUbicacion.setHeight("-1px");
		labelUbicacion.setValue("Ubicación:");
		LayoutUbicacion.addComponent(labelUbicacion, "top:0.0px;left:0.0px;");
		
		// campoUbicacion
		campoUbicacion = new TextField();
		campoUbicacion.setImmediate(false);
		campoUbicacion.setWidth("-1px");
		campoUbicacion.setHeight("-1px");
		LayoutUbicacion.addComponent(campoUbicacion, "top:40.0px;left:0.0px;");
		
		// labelMuebleUbicacion
		labelMuebleUbicacion = new Label();
		labelMuebleUbicacion.setImmediate(false);
		labelMuebleUbicacion.setWidth("-1px");
		labelMuebleUbicacion.setHeight("-1px");
		labelMuebleUbicacion.setValue("Mueble Ubicación:");
		LayoutUbicacion.addComponent(labelMuebleUbicacion, "top:0.0px;left:350.0px;");
		
		// campoMuebleUbicacion
		campoMuebleUbicacion = new TextField();
		campoMuebleUbicacion.setImmediate(false);
		campoMuebleUbicacion.setWidth("-1px");
		campoMuebleUbicacion.setHeight("-1px");
		LayoutUbicacion.addComponent(campoMuebleUbicacion, "top:40.0px;left:350.0px;");
		
		// labelUbicLegajos
		labelUbicLegajos = new Label();
		labelUbicLegajos.setImmediate(false);
		labelUbicLegajos.setWidth("-1px");
		labelUbicLegajos.setHeight("-1px");
		labelUbicLegajos.setValue("Ubicación Legajos:");
		LayoutUbicacion.addComponent(labelUbicLegajos, "top:0.0px;left:700.0px;");
		
		// campoUbicLegajos
		campoUbicLegajos = new TextField();
		campoUbicLegajos.setImmediate(false);
		campoUbicLegajos.setWidth("-1px");
		campoUbicLegajos.setHeight("-1px");
		LayoutUbicacion.addComponent(campoUbicLegajos, "top:40.0px;left:700.0px;");
		
		// labelCantLegajos
		labelCantLegajos = new Label();
		labelCantLegajos.setImmediate(false);
		labelCantLegajos.setWidth("-1px");
		labelCantLegajos.setHeight("-1px");
		labelCantLegajos.setValue("Cantidad de Legajos:");
		LayoutUbicacion.addComponent(labelCantLegajos, "top:200.0px;left:0.0px;");
		
		// campoCantLegajos
		campoCantLegajos = new TextField();
		campoCantLegajos.setImmediate(false);
		campoCantLegajos.setWidth("-1px");
		campoCantLegajos.setHeight("-1px");
		LayoutUbicacion.addComponent(campoCantLegajos, "top:240.0px;left:0.0px;");
		
		return LayoutUbicacion;
	}

	@AutoGenerated
	private AbsoluteLayout buildLayoutFechas() {
		// common part: create layout
		LayoutFechas = new AbsoluteLayout();
		LayoutFechas.setStyleName("layout-acordeon");
		LayoutFechas.setImmediate(false);
		LayoutFechas.setWidth("100.0%");
		LayoutFechas.setHeight("100.0%");
		
		// labelFechaUltUbicacion
		labelFechaUltUbicacion = new Label();
		labelFechaUltUbicacion.setImmediate(false);
		labelFechaUltUbicacion.setWidth("-1px");
		labelFechaUltUbicacion.setHeight("-1px");
		labelFechaUltUbicacion.setValue("Fecha Última Ubicación:");
		LayoutFechas.addComponent(labelFechaUltUbicacion, "top:0.0px;left:700.0px;");
		
		// campoFechaUltUbicacion
		campoFechaUltUbicacion = new TextField();
		campoFechaUltUbicacion.setImmediate(false);
		campoFechaUltUbicacion.setWidth("-1px");
		campoFechaUltUbicacion.setHeight("-1px");
		LayoutFechas.addComponent(campoFechaUltUbicacion, "top:40.0px;left:700.0px;");
		
		// labelFechaPresentacion
		labelFechaPresentacion = new Label();
		labelFechaPresentacion.setImmediate(false);
		labelFechaPresentacion.setWidth("-1px");
		labelFechaPresentacion.setHeight("-1px");
		labelFechaPresentacion.setValue("Fecha Presentación:");
		LayoutFechas.addComponent(labelFechaPresentacion, "top:0.0px;");
		
		// campoFechaPresentacion
		campoFechaPresentacion = new TextField();
		campoFechaPresentacion.setImmediate(false);
		campoFechaPresentacion.setWidth("-1px");
		campoFechaPresentacion.setHeight("-1px");
		LayoutFechas.addComponent(campoFechaPresentacion, "top:40.0px;left:0.0px;");
		
		// labelFechaIng
		labelFechaIng = new Label();
		labelFechaIng.setImmediate(false);
		labelFechaIng.setWidth("-1px");
		labelFechaIng.setHeight("-1px");
		labelFechaIng.setValue("Fecha Ingreso Denuncia:");
		LayoutFechas.addComponent(labelFechaIng, "top:0.0px;left:350.0px;");
		
		// campoFechaIng
		campoFechaIng = new TextField();
		campoFechaIng.setImmediate(false);
		campoFechaIng.setWidth("-1px");
		campoFechaIng.setHeight("-1px");
		LayoutFechas.addComponent(campoFechaIng, "top:40.0px;left:350.0px;");
		
		// campoDuracCambioUltUbic
		campoDuracCambioUltUbic = new TextField();
		campoDuracCambioUltUbic.setImmediate(false);
		campoDuracCambioUltUbic.setWidth("-1px");
		campoDuracCambioUltUbic.setHeight("-1px");
		LayoutFechas.addComponent(campoDuracCambioUltUbic, "top:730.0px;left:0.0px;");
		
		return LayoutFechas;
	}

}
