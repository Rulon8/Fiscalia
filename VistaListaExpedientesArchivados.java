package ucr.casoUso;

import java.sql.SQLException;

import org.tepi.filtertable.FilterTable;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.sqlcontainer.SQLContainer;
import com.vaadin.data.util.sqlcontainer.connection.SimpleJDBCConnectionPool;
import com.vaadin.data.util.sqlcontainer.query.FreeformQuery;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;

public class VistaListaExpedientesArchivados extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button buttonVolver;
	@AutoGenerated
	private Label labelTitulo;
	@AutoGenerated
	private FilterTable filterTable_1;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	private String nomColum = null;
	private String valorText = null;
	private Controlador control;
	private ControladorListaExpedientesArchivados controlador;
	
	public VistaListaExpedientesArchivados() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		llenarTabla();

		buttonVolver.addClickListener(new ClickListener(){
			@Override
			public void buttonClick (ClickEvent evento){
				control.cambiarVista("Menu Principal");
			}
		});
	}
	
	public void llenarTabla(){
		try{
		String query1 = new String("SELECT * FROM expediente WHERE clasificacion = 'Clasificacion 1'");
		SimpleJDBCConnectionPool cp;
		cp = new SimpleJDBCConnectionPool("org.postgresql.Driver",
				"jdbc:postgresql://127.0.0.1:5432/Fiscalia", "postgres", "123456", 1, 5);
		FreeformQuery productFreeFormQuery = new FreeformQuery(query1, cp);
		//TableQuery tq = new TableQuery(query1, cp);
		SQLContainer containerTabla = new SQLContainer(productFreeFormQuery);
		filterTable_1.setContainerDataSource(containerTabla);
		filterTable_1.setSelectable(true);
		filterTable_1.setImmediate(true);
		filterTable_1.setVisibleColumns(new Object[] {"codigo","numexpediente","instructorasig","fechaingreso","clasificacion"});
		filterTable_1.setColumnHeaders(new String [] {"Código", "Número de Expediente", "Instructor Asignado", "Fecha de Ingreso", "Clasificación"});
		filterTable_1.setFilterBarVisible(true);
		filterTable_1.setColumnWidth("codigo", 100);
		filterTable_1.setColumnWidth("numexpediente", 150);
		filterTable_1.setColumnWidth("instructorasig", 150);
		filterTable_1.setColumnWidth("fechaingreso", 200);
		filterTable_1.setColumnWidth("clasificacion", 200);
		filterTable_1.setHeight("35%");
		}
		catch (SQLException e){
			e.printStackTrace();
		}	
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// filterTable_1
		filterTable_1 = new FilterTable();
		filterTable_1.setImmediate(false);
		filterTable_1.setWidth("-1px");
		filterTable_1.setHeight("-1px");
		mainLayout.addComponent(filterTable_1, "top:140.0px;left:146.0px;");
		
		// labelTitulo
		labelTitulo = new Label();
		labelTitulo.setImmediate(false);
		labelTitulo.setWidth("-1px");
		labelTitulo.setHeight("-1px");
		labelTitulo.setValue("Lista de Expedientes Archivados");
		mainLayout.addComponent(labelTitulo, "top:100.0px;left:146.0px;");
		
		// buttonVolver
		buttonVolver = new Button();
		buttonVolver.setCaption("Volver");
		buttonVolver.setImmediate(true);
		buttonVolver.setWidth("-1px");
		buttonVolver.setHeight("-1px");
		mainLayout.addComponent(buttonVolver, "top:460.0px;left:146.0px;");
		
		return mainLayout;
	}

}
