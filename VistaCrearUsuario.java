package ucr.casoUso;

import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;

public class VistaCrearUsuario extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Label labelErrTip;
	@AutoGenerated
	private Button botonVolver;
	@AutoGenerated
	private Label labelErrCod;
	@AutoGenerated
	private TextField campoCodigo;
	@AutoGenerated
	private Label labelCodigo;
	@AutoGenerated
	private Label label_exito;
	@AutoGenerated
	private Label labelErrCed;
	@AutoGenerated
	private Label labelErrTel;
	@AutoGenerated
	private Label labelErrCor;
	@AutoGenerated
	private Label labelErrApe;
	@AutoGenerated
	private Label labelErrNom;
	@AutoGenerated
	private Label etiquetaTitulo;
	@AutoGenerated
	private ComboBox comboBoxTipoUsuario;
	@AutoGenerated
	private ComboBox comboBoxInstructor;
	@AutoGenerated
	private TextField campoApellido;
	@AutoGenerated
	private TextField campoNombre;
	@AutoGenerated
	private Button botonCrear;
	@AutoGenerated
	private Label etiquetaNombre;
	@AutoGenerated
	private Label etiquetaInstructor;
	@AutoGenerated
	private Label etiquetaTipo;
	@AutoGenerated
	private Label etiquetaCedula;
	@AutoGenerated
	private Label etiquetaTelefono;
	@AutoGenerated
	private Label etiquetaCorreo;
	@AutoGenerated
	private Label etiquetaApellido;
	@AutoGenerated
	private TextField campoTelefono;
	@AutoGenerated
	private TextField campoCorreo;
	@AutoGenerated
	private TextField campoCedula;
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	String nombre, apellido, email, telefono, cedula, tipoUsuario, instructorAsig, pass, codigo;
	String [] newUser;
	private ControladorCrearUsuario controlador;
	private Controlador control;
	private String[] campos;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public VistaCrearUsuario() {
		controlador = ControladorCrearUsuario.obtenerInstancia();
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		control = Controlador.obtenerInstancia();
		
		//Acomodar campos para tecla TAB
		campoNombre.setTabIndex(1);
		campoApellido.setTabIndex(2);
		campoCorreo.setTabIndex(3);
		campoTelefono.setTabIndex(4);
		campoCedula.setTabIndex(5);
		comboBoxTipoUsuario.setTabIndex(6);
		comboBoxInstructor.setTabIndex(7);
		campoCodigo.setTabIndex(8);
		botonCrear.setTabIndex(9);
		
		//Llenar el comboBox de tipo de Usuario con las opciones disponibles
		llenarComboBoxTipoUsuario();
		
		//Listener del boton que valida y recibe los datos ingresados
		botonCrear.addClickListener(new ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				if (validarCampos()) {
					obtenerResultados();
					if(controlador.enviarDatos(campos)){
						label_exito.removeStyleName("error");
						label_exito.addStyleName("exito");
						label_exito.setValue("Usuario agregado exitosamente");
						label_exito.setVisible(true);
					} else {
						label_exito.removeStyleName("exito");
						label_exito.addStyleName("error");
						label_exito.setValue("Error al agregar usuario. Por favor intente de nuevo");
						label_exito.setVisible(true);
					}
				}
			}
		});
		
		botonVolver.addClickListener(new ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				// TODO Auto-generated method stub
				control.cambiarVista("Menu Principal");
			}
			
		});
		
		//Poner comboBox de instructores invisible por defecto
		etiquetaInstructor.setVisible(false);
		comboBoxInstructor.setVisible(false);
		labelCodigo.setVisible(false);
		campoCodigo.setVisible(false);
		labelErrNom.setVisible(false);
		labelErrApe.setVisible(false);
		labelErrTel.setVisible(false);
		labelErrCed.setVisible(false);
		labelErrCor.setVisible(false);
		labelErrCod.setVisible(false);
		label_exito.setVisible(false);
		labelErrTip.setVisible(false);
		
		comboBoxTipoUsuario.setImmediate(true);
		labelErrNom.setImmediate(true);
		labelErrApe.setImmediate(true);
		labelErrTel.setImmediate(true);
		labelErrCed.setImmediate(true);
		labelErrCor.setImmediate(true);
		labelErrCod.setImmediate(true);
		label_exito.setImmediate(true);
		labelErrTip.setImmediate(true);
		
		comboBoxInstructor.setRequired(false);
		campoCodigo.setRequired(false);
		
		//Listener del comboBox de Tipo de usuario que habilita el comboBox de instructores
		comboBoxTipoUsuario.addValueChangeListener(new ValueChangeListener() {
			
			@Override
			public void valueChange(ValueChangeEvent event) {
				// TODO Auto-generated method stub
				
				comboBoxInstructor.setVisible(false);
				etiquetaInstructor.setVisible(false);
				labelCodigo.setVisible(false);
				campoCodigo.setVisible(false);
				labelErrCod.setVisible(false);
				labelErrTip.setVisible(false);
				comboBoxInstructor.setRequired(false);
				campoCodigo.setRequired(false);
				
				if (comboBoxTipoUsuario.getValue().toString() == "Asistente") {
					comboBoxInstructor.setRequired(true);
					comboBoxInstructor.setVisible(true);
					etiquetaInstructor.setVisible(true);
				} else if (comboBoxTipoUsuario.getValue().toString() == "Instructor") {
					campoCodigo.setRequired(true);
					labelCodigo.setVisible(true);
					campoCodigo.setVisible(true);
				}
			}
		});
	}
	
	public boolean validarCampos() {
		 boolean resultado = true;
		 
		 String nombre_apellido = "^([a-zA-Z]+)$";
		 String telefono = "^[0-9]{8}$";
		 String cedula = "^([0-9]{9}|[0-9]{15})$";
		 String correo = "^([a-z1-9]+(\\_|\\-|\\.)?[a-z1-9]+\\@[a-z1-9]+(\\.[a-z1-9]+)+)$";
		 String codigo = "^[0-9]+$";	//codigo puede cambiar
		 
		 Pattern pattNom = Pattern.compile(nombre_apellido);
		 Pattern pattTel = Pattern.compile(telefono);
		 Pattern pattCed = Pattern.compile(cedula);
		 Pattern pattCor = Pattern.compile(correo);
		 Pattern pattCod = Pattern.compile(codigo);
		 
		 Matcher matchNom = pattNom.matcher(campoNombre.getValue().toString());
		 Matcher matchApe = pattNom.matcher(campoApellido.getValue().toString());
		 Matcher matchTel = pattTel.matcher(campoTelefono.getValue().toString());
		 Matcher matchCed = pattCed.matcher(campoCedula.getValue().toString());
		 Matcher matchCor = pattCor.matcher(campoCorreo.getValue().toString());
		 Matcher matchCod = pattCod.matcher(campoCodigo.getValue().toString());
		 
		 if (!matchNom.find()){
			 resultado = false;
			 labelErrNom.setVisible(true);
		 }else{
			 labelErrNom.setVisible(false);
		 }
		 
		 if (!matchApe.find()){
			 resultado = false;
			 labelErrApe.setVisible(true);
		 }else{
			 labelErrApe.setVisible(false);
		 }
		 
		 if (!matchTel.find()){
			 resultado = false;
			 labelErrTel.setVisible(true);
		 }else{
			 labelErrTel.setVisible(false);
		 }
		 
		 if (!matchCed.find()){
			 resultado = false;
			 labelErrCed.setVisible(true);
		 }else{
			 labelErrCed.setVisible(false);
		 }
		 
		 if (!matchCor.find()){
			 resultado = false;
			 labelErrCor.setVisible(true);
		 }else{
			 labelErrCor.setVisible(false);
		 }
		 
		 if (campoCodigo.isVisible()) {
			 if (!matchCod.find()){
				 resultado = false;
				 labelErrCod.setVisible(true);
			 }else{
				 labelErrCod.setVisible(false);
			 }
		 }
		 
		 if (comboBoxTipoUsuario.isEmpty()) {
			 resultado = false;
			 labelErrTip.setVisible(true);
		 }
		 
		 if (comboBoxInstructor.isVisible()) {
			 if (comboBoxInstructor.isEmpty()) {
				 resultado = false;
				 labelErrCod.setVisible(true);
			 }
		 }
		 return resultado;
	}
	
	public void obtenerResultados() {
		nombre = campoNombre.getValue();
		apellido = campoApellido.getValue();
		email = campoCorreo.getValue();
		telefono = campoTelefono.getValue();
		cedula = campoCedula.getValue();
		tipoUsuario = comboBoxTipoUsuario.getValue().toString();
		instructorAsig = "";
		pass = "";
		codigo = "";
		campos = new String[8];
		
		System.out.println(nombre + " " + apellido + " " + email + " " +telefono + " " + cedula + " " + tipoUsuario);
		campos[0] = nombre;
		campos[1] = apellido;
		campos[2] = cedula;
		campos[3] = email;
		campos[4] = telefono;
		campos[5] = tipoUsuario;
		campos[6] = pass;
		
		if (tipoUsuario == "Asistente") {
			instructorAsig = comboBoxInstructor.getValue().toString();
			campos[7] = instructorAsig;
		}
		else if (tipoUsuario == "Instructor") {
			//FALTA: obtener codigo
			codigo = campoCodigo.getValue();
			campos[7] = codigo;
		}
		
		
	}	
	private void llenarComboBoxTipoUsuario() {
		comboBoxTipoUsuario.addItem("Instructor");
		comboBoxTipoUsuario.addItem("Secretaria");
		comboBoxTipoUsuario.addItem("Fiscal");
		comboBoxTipoUsuario.addItem("Asistente");
		comboBoxTipoUsuario.addItem("Notificador");
		
	}
	
	public void addComboBoxInstructor(String opcion) {
		
		comboBoxInstructor.addItem(opcion);
		
	}
	
	public void addVariosComboBoxInstructor2(List<String> lista) {
		
		for(int i = 0; i < lista.size(); i++) {
			comboBoxInstructor.addItem(lista.get(i));
		}
		
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("700px");
		mainLayout.setHeight("800px");
		
		// top-level component properties
		setWidth("700px");
		setHeight("800px");
		
		// campoCedula
		campoCedula = new TextField();
		campoCedula.setImmediate(false);
		campoCedula.setWidth("-1px");
		campoCedula.setHeight("-1px");
		campoCedula.setRequired(true);
		mainLayout.addComponent(campoCedula, "top:414.0px;left:62.0px;");
		
		// campoCorreo
		campoCorreo = new TextField();
		campoCorreo.setImmediate(false);
		campoCorreo.setWidth("-1px");
		campoCorreo.setHeight("-1px");
		campoCorreo.setRequired(true);
		mainLayout.addComponent(campoCorreo, "top:259.0px;left:62.0px;");
		
		// campoTelefono
		campoTelefono = new TextField();
		campoTelefono.setImmediate(false);
		campoTelefono.setWidth("-1px");
		campoTelefono.setHeight("-1px");
		campoTelefono.setRequired(true);
		mainLayout.addComponent(campoTelefono, "top:334.0px;left:62.0px;");
		
		// etiquetaApellido
		etiquetaApellido = new Label();
		etiquetaApellido.setImmediate(false);
		etiquetaApellido.setWidth("-1px");
		etiquetaApellido.setHeight("-1px");
		etiquetaApellido.setValue("Apellido");
		mainLayout.addComponent(etiquetaApellido, "top:156.0px;left:80.0px;");
		
		// etiquetaCorreo
		etiquetaCorreo = new Label();
		etiquetaCorreo.setImmediate(false);
		etiquetaCorreo.setWidth("-1px");
		etiquetaCorreo.setHeight("18px");
		etiquetaCorreo.setValue("Correo electrónico");
		mainLayout.addComponent(etiquetaCorreo, "top:233.0px;left:80.0px;");
		
		// etiquetaTelefono
		etiquetaTelefono = new Label();
		etiquetaTelefono.setImmediate(false);
		etiquetaTelefono.setWidth("-1px");
		etiquetaTelefono.setHeight("-1px");
		etiquetaTelefono.setValue("Teléfono");
		mainLayout.addComponent(etiquetaTelefono, "top:306.0px;left:80.0px;");
		
		// etiquetaCedula
		etiquetaCedula = new Label();
		etiquetaCedula.setImmediate(false);
		etiquetaCedula.setWidth("-1px");
		etiquetaCedula.setHeight("-1px");
		etiquetaCedula.setValue("Cédula");
		mainLayout.addComponent(etiquetaCedula, "top:386.0px;left:80.0px;");
		
		// etiquetaTipo
		etiquetaTipo = new Label();
		etiquetaTipo.setImmediate(false);
		etiquetaTipo.setWidth("-1px");
		etiquetaTipo.setHeight("-1px");
		etiquetaTipo.setValue("Tipo de Usuario");
		mainLayout.addComponent(etiquetaTipo, "top:532.0px;left:75.0px;");
		
		// etiquetaInstructor
		etiquetaInstructor = new Label();
		etiquetaInstructor.setImmediate(false);
		etiquetaInstructor.setWidth("-1px");
		etiquetaInstructor.setHeight("-1px");
		etiquetaInstructor.setValue("Instructor Asignado");
		mainLayout.addComponent(etiquetaInstructor, "top:532.0px;left:317.0px;");
		
		// etiquetaNombre
		etiquetaNombre = new Label();
		etiquetaNombre.setImmediate(false);
		etiquetaNombre.setWidth("-1px");
		etiquetaNombre.setHeight("-1px");
		etiquetaNombre.setValue("Nombre");
		mainLayout.addComponent(etiquetaNombre, "top:80.0px;left:80.0px;");
		
		// botonCrear
		botonCrear = new Button();
		botonCrear.setCaption("Crear");
		botonCrear.setImmediate(true);
		botonCrear.setWidth("-1px");
		botonCrear.setHeight("-1px");
		mainLayout.addComponent(botonCrear, "top:658.0px;left:62.0px;");
		
		// campoNombre
		campoNombre = new TextField();
		campoNombre.setImmediate(false);
		campoNombre.setWidth("-1px");
		campoNombre.setHeight("-1px");
		campoNombre.setRequired(true);
		mainLayout.addComponent(campoNombre, "top:106.0px;left:62.0px;");
		
		// campoApellido
		campoApellido = new TextField();
		campoApellido.setImmediate(false);
		campoApellido.setWidth("-1px");
		campoApellido.setHeight("-1px");
		campoApellido.setRequired(true);
		mainLayout.addComponent(campoApellido, "top:185.0px;left:62.0px;");
		
		// comboBoxInstructor
		comboBoxInstructor = new ComboBox();
		comboBoxInstructor.setImmediate(false);
		comboBoxInstructor.setWidth("-1px");
		comboBoxInstructor.setHeight("-1px");
		mainLayout.addComponent(comboBoxInstructor, "top:560.0px;left:298.0px;");
		
		// comboBoxTipoUsuario
		comboBoxTipoUsuario = new ComboBox();
		comboBoxTipoUsuario.setImmediate(false);
		comboBoxTipoUsuario.setWidth("-1px");
		comboBoxTipoUsuario.setHeight("-1px");
		comboBoxTipoUsuario.setRequired(true);
		mainLayout.addComponent(comboBoxTipoUsuario, "top:560.0px;left:62.0px;");
		
		// etiquetaTitulo
		etiquetaTitulo = new Label();
		etiquetaTitulo.setStyleName("titulo");
		etiquetaTitulo.setImmediate(false);
		etiquetaTitulo.setWidth("-1px");
		etiquetaTitulo.setHeight("-1px");
		etiquetaTitulo.setValue("Nuevo Usuario");
		mainLayout.addComponent(etiquetaTitulo, "top:22.0px;left:20.0px;");
		
		// labelErrNom
		labelErrNom = new Label();
		labelErrNom.setStyleName("error");
		labelErrNom.setImmediate(false);
		labelErrNom.setWidth("-1px");
		labelErrNom.setHeight("-1px");
		labelErrNom.setValue("Valor no válido");
		mainLayout.addComponent(labelErrNom, "top:112.0px;left:281.0px;");
		
		// labelErrApe
		labelErrApe = new Label();
		labelErrApe.setStyleName("error");
		labelErrApe.setImmediate(false);
		labelErrApe.setWidth("-1px");
		labelErrApe.setHeight("-1px");
		labelErrApe.setValue("Valor no válido");
		mainLayout.addComponent(labelErrApe, "top:191.0px;left:281.0px;");
		
		// labelErrCor
		labelErrCor = new Label();
		labelErrCor.setStyleName("error");
		labelErrCor.setImmediate(false);
		labelErrCor.setWidth("-1px");
		labelErrCor.setHeight("-1px");
		labelErrCor.setValue("Valor no válido");
		mainLayout.addComponent(labelErrCor, "top:262.0px;left:281.0px;");
		
		// labelErrTel
		labelErrTel = new Label();
		labelErrTel.setStyleName("error");
		labelErrTel.setImmediate(false);
		labelErrTel.setWidth("-1px");
		labelErrTel.setHeight("-1px");
		labelErrTel.setValue("Valor no válido");
		mainLayout.addComponent(labelErrTel, "top:340.0px;left:281.0px;");
		
		// labelErrCed
		labelErrCed = new Label();
		labelErrCed.setStyleName("error");
		labelErrCed.setImmediate(false);
		labelErrCed.setWidth("-1px");
		labelErrCed.setHeight("-1px");
		labelErrCed.setValue("Valor no válido");
		mainLayout.addComponent(labelErrCed, "top:420.0px;left:281.0px;");
		
		// label_exito
		label_exito = new Label();
		label_exito.setStyleName("exito");
		label_exito.setImmediate(false);
		label_exito.setWidth("-1px");
		label_exito.setHeight("-1px");
		label_exito.setValue("Usuario agregado exitosamente");
		mainLayout.addComponent(label_exito, "top:660.0px;left:170.0px;");
		
		// labelCodigo
		labelCodigo = new Label();
		labelCodigo.setImmediate(false);
		labelCodigo.setWidth("-1px");
		labelCodigo.setHeight("-1px");
		labelCodigo.setValue("Código Instructor");
		mainLayout.addComponent(labelCodigo, "top:532.0px;left:317.0px;");
		
		// campoCodigo
		campoCodigo = new TextField();
		campoCodigo.setImmediate(false);
		campoCodigo.setWidth("-1px");
		campoCodigo.setHeight("-1px");
		mainLayout.addComponent(campoCodigo, "top:560.0px;left:298.0px;");
		
		// labelErrCod
		labelErrCod = new Label();
		labelErrCod.setStyleName("error");
		labelErrCod.setImmediate(false);
		labelErrCod.setWidth("-1px");
		labelErrCod.setHeight("-1px");
		labelErrCod.setValue("Valor no válido");
		mainLayout.addComponent(labelErrCod, "top:566.0px;left:515.0px;");
		
		// botonVolver
		botonVolver = new Button();
		botonVolver.setCaption("Volver");
		botonVolver.setImmediate(true);
		botonVolver.setWidth("-1px");
		botonVolver.setHeight("-1px");
		mainLayout.addComponent(botonVolver, "top:737.0px;left:62.0px;");
		
		// labelErrTip
		labelErrTip = new Label();
		labelErrTip.setStyleName("error");
		labelErrTip.setImmediate(false);
		labelErrTip.setWidth("-1px");
		labelErrTip.setHeight("-1px");
		labelErrTip.setValue("Valor no válido");
		mainLayout.addComponent(labelErrTip, "top:566.0px;left:281.0px;");
		
		return mainLayout;
	}

}
