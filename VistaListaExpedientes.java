package ucr.casoUso;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;

import org.tepi.filtertable.FilterTable;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.sqlcontainer.SQLContainer;
import com.vaadin.data.util.sqlcontainer.connection.SimpleJDBCConnectionPool;
import com.vaadin.data.util.sqlcontainer.query.TableQuery;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;


//import com.vaadin.server.Sizeable;



public class VistaListaExpedientes extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button buttonVolver;
	@AutoGenerated
	private Button buttonReporte;
	@AutoGenerated
	private FilterTable filterTable_1;
	@AutoGenerated
	private Label labelTitulo;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	private String nomColum = null;
	private String valorText = null;
	private Controlador control;
	private ControladorListaExpedientes controlador;
	
	public VistaListaExpedientes() {
		control = Controlador.obtenerInstancia();
		controlador = ControladorListaExpedientes.obtenerInstancia();
		buildMainLayout();
		setCompositionRoot(mainLayout);
		llenarTabla();
		
		filterTable_1.addItemClickListener(new ItemClickEvent.ItemClickListener(){
			@Override
			public void itemClick(ItemClickEvent itemClickEvent){
				//System.out.println(itemClickEvent.getItemId().toString());
				
				//header
				nomColum = itemClickEvent.getPropertyId().toString();
				System.out.println("en la tabla "+ nomColum);
				//valor del textbox
				valorText = filterTable_1.getFilterFieldValue(itemClickEvent.getPropertyId().toString()).toString();
				System.out.println("en la tabla " + valorText);
			}
		});
		
		buttonReporte.addClickListener(new ClickListener(){
			@Override
			public void buttonClick (ClickEvent evento){
				System.out.println(nomColum);
				System.out.println(valorText);
				generarPDF();
				filterTable_1.clearFilters();
				nomColum = null;
				valorText = null;
			}
		});
		
		buttonVolver.addClickListener(new ClickListener(){
			@Override
			public void buttonClick (ClickEvent evento){
				control.cambiarVista("Menu Principal");
			}
		});
	}
	
	public void llenarTabla(){
		try{
		SimpleJDBCConnectionPool cp;
		cp = new SimpleJDBCConnectionPool("org.postgresql.Driver",
				"jdbc:postgresql://127.0.0.1:5432/Fiscalia", "postgres", "pass", 1, 5);
		TableQuery tq = new TableQuery("expediente", cp);
		SQLContainer containerTabla = new SQLContainer(tq);
		filterTable_1.setContainerDataSource(containerTabla);
		filterTable_1.setSelectable(true);
		filterTable_1.setImmediate(true);
		filterTable_1.setVisibleColumns(new Object[] {"codigo","numexpediente","instructorasig","fechaingreso","clasificacion"});
		filterTable_1.setColumnHeaders(new String [] {"Código", "Número de Expediente", "Instructor Asignado", "Fecha de Ingreso", "Clasificación"});
		filterTable_1.setFilterBarVisible(true);
		//filterTable_1.setHeight(layTabla.getHeight(), Sizeable.UNITS_PERCENTAGE);
		//filterTable_1.setWidth(layTabla.getWidth(), Sizeable.UNITS_PERCENTAGE);
		filterTable_1.setColumnWidth("codigo", 100);
		filterTable_1.setColumnWidth("numexpediente", 150);
		filterTable_1.setColumnWidth("instructorasig", 150);
		filterTable_1.setColumnWidth("fechaingreso", 200);
		filterTable_1.setColumnWidth("clasificacion", 200);
		filterTable_1.setHeight("35%");
		//System.out.println(filterTable_1.getFilterFieldValue("numexpediente"));
		//System.out.println(filterTable_1.getColumnHeaders());
		
		}
		catch (SQLException e){
			e.printStackTrace();
		}
	}
	
public void generarPDF() {
		SimpleJDBCConnectionPool cp;
		Connection c;
		Statement s;
		String consulta;
		ResultSet rs;
		Modelo m = Modelo.obtenerInstancia();
				
		try {
			cp = new SimpleJDBCConnectionPool("org.postgresql.Driver","jdbc:postgresql://127.0.0.1:5432/Fiscalia", "postgres", "pass", 1, 5);
			c = cp.reserveConnection();
			s = c.createStatement();
			if (nomColum != null){
				consulta = "SELECT * FROM expediente WHERE " + nomColum + " LIKE  '%" + valorText + "%'";
			}else{
				consulta = "SELECT * FROM expediente";
			}
			rs = s.executeQuery(consulta);
			
			try {
				JasperDesign design= JRXmlLoader.load("C:\\Users\\Giancarlo\\Downloads\\Telegram Desktop\\Reporte_Expedientes.jrxml");
				JasperReport reporte = JasperCompileManager.compileReport(design);
				JRResultSetDataSource jrRS = new JRResultSetDataSource(rs);
				Map<String, Object> parametros = new HashMap();
				parametros.put("empresa", "Colegio de Abogados");
				JasperReport jasperReport = JasperCompileManager.compileReport("C:\\Users\\Giancarlo\\Downloads\\Telegram Desktop\\Reporte_Expedientes.jrxml");
				JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametros, jrRS);
				JasperExportManager.exportReportToPdfFile(jasperPrint, "C:\\Users\\Giancarlo\\Downloads\\Telegram Desktop\\Reporte_Expedientes.pdf");
			}
			catch (JRException e) {
				
			}
			
			s.close();
			c.commit();
			c.close();
			
			m.getConnectionPool().releaseConnection(c);
		}
		catch (SQLException e) {
			//FALTA: Controlar errores de SQL
			e.printStackTrace();
		}
		
	}
	
	

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// labelTitulo
		labelTitulo = new Label();
		labelTitulo.setImmediate(false);
		labelTitulo.setWidth("-1px");
		labelTitulo.setHeight("-1px");
		labelTitulo.setValue("Lista de Expedientes");
		mainLayout.addComponent(labelTitulo, "top:100.0px;left:120.0px;");
		
		// filterTable_1
		filterTable_1 = new FilterTable();
		filterTable_1.setImmediate(false);
		filterTable_1.setWidth("-1px");
		filterTable_1.setHeight("-1px");
		mainLayout.addComponent(filterTable_1, "top:140.0px;left:120.0px;");
		
		// buttonReporte
		buttonReporte = new Button();
		buttonReporte.setCaption("Generar PDF");
		buttonReporte.setImmediate(true);
		buttonReporte.setWidth("125px");
		buttonReporte.setHeight("-1px");
		mainLayout.addComponent(buttonReporte, "top:460.0px;left:120.0px;");
		
		// buttonVolver
		buttonVolver = new Button();
		buttonVolver.setCaption("Volver");
		buttonVolver.setImmediate(true);
		buttonVolver.setWidth("80px");
		buttonVolver.setHeight("-1px");
		mainLayout.addComponent(buttonVolver, "top:554.0px;left:120.0px;");
		
		return mainLayout;
	}

}
